Routine MAIN
MAIN
CALL MYJOBSHOP
END
Routine MYJOBSHOP
ROUTINE MYJOBSHOP
DEFINE MG1 AS A MACHINEGROUP REFERENCE VARIABLE
DEFINE JOB AND MYJOB AS JOB REFERENCE VARIABLES
DEFINE I, J AS INTEGER VARIABLES
DEFINE SERVERNAME AS TEXT VARIABLE
OPEN 6 FOR OUTPUT, FILENAME IS "jobs.txt"	'' for output listing
USE 6 FOR OUTPUT
OPEN 5 FOR INPUT, NAME IS "hostdata.txt"
USE 5 FOR INPUT
READ SERVERNAME
CLOSE 5
CONNECT PERSISTENT SERVER NAMED SERVERNAME
OPEN 5 FOR INPUT, NAME IS "localdata.txt"
USE 5 FOR INPUT
IF ROPENERR.V EQ 0
  WRITE AS "Retrieving saved persistent reference data.", /
  CREATE A MACHINEGROUP CALLED MG1
  READ INBUFFER(MG1) AS P, /		'' retrieve persistent reference
ENDIF
CLOSE 5
IF MG1 EQ 0
CREATE A MACHINEGROUP CALLED MG1
WRITE AS "Creating and populating jobshop data.", /
WRITE AS "Testing RANKED set filing by PRIORITY, then VALUE", /
WRITE AS "Reading job data from file jobdata.txt.", /
OPEN 5 FOR INPUT, FILENAME IS "jobdata.txt"
USE 5 FOR INPUT
LET EOF.V(UIB.R) = 1
WHILE EOF.V.. NE 2
DO
  CREATE A JOB
  READ JOBNAME AS T *
  READ PRIORITY
  READ VALUE
  WRITE PRIORITY(JOB), VALUE(JOB), JOBNAME(JOB) AS I 6, I 6, S 2, T *, /
  READ J
  FOR I = 1 TO J
  DO
    CREATE A JOBSTEP
    READ STEPNAME(JOBSTEP) AS T *
    FILE JOBSTEP FIRST IN ROUTING(JOB)
  LOOP
  FILE JOB IN INBUFFER(MG1)
  READ AS /
LOOP
CLOSE 5
RECORD ALL PERSISTENT ENTITIES
OPEN 7 FOR OUTPUT, FILENAME IS "localdata.txt"
WRITE INBUFFER(MG1) AS P, /	USING 7 '' save persistent reference
CLOSE 7
WRITE AS /, "!! iRef data saved in localdata.txt !!", /
ENDIF	'' MG1 test
WRITE AS "Listing RANKED set contents:", /
WRITE AS "SEQ   PRI   VAL", /
LET I = 1
FOR EACH JOB IN INBUFFER(MG1)
DO
  WRITE I, PRIORITY(JOB), VALUE(JOB), JOBNAME(JOB) AS I 3, I 6, I 6, S 2, T *, /
  LET I = I + 1
  FOR EACH JOBSTEP IN ROUTING(JOB)
  DO
    WRITE STEPNAME(JOBSTEP) AS T *, /
  LOOP
LOOP
WRITE N.INBUFFER(MG1) AS "TOTAL JOBS: ", I 3, /
WRITE AS "Testing FOR EACH in set ", /
FOR EACH MYJOB IN INBUFFER(MG1)
DO
  WRITE JOBNAME(MYJOB) AS "JOB: ", T *, B 20
  FOR EACH JOBSTEP IN ROUTING(MYJOB)
  DO
    WRITE STEPNAME(JOBSTEP) AS T *, S 2
  LOOP
  WRITE AS /
LOOP
WRITE AS "Implicit: JOBNAME.., FOR EACH JOBSTEP, STEPNAME..", /
FOR EACH JOB IN INBUFFER(MG1)
DO
  WRITE JOBNAME.. AS T *, S 3
  FOR EACH JOBSTEP IN ROUTING..
  DO
    WRITE STEPNAME.. AS T *, S 2
  LOOP
  IF S.INBUFFER(JOB) NE 0
    WRITE JOBNAME(S.INBUFFER..) AS "next job will be:  ", T *
  ENDIF
  WRITE AS /
LOOP
WRITE AS "Testing cascaded set attribute refs: 1st & 2nd step names of 1st, then 1st of 2nd job", /
WRITE STEPNAME(F.ROUTING(F.INBUFFER(MG1))) AS T *, /
WRITE STEPNAME(S.ROUTING(F.ROUTING(F.INBUFFER(MG1)))) AS T *, /
WRITE STEPNAME(F.ROUTING(S.INBUFFER(F.INBUFFER(MG1)))) AS T *, /
WRITE AS "Testing FIND - look for PRIORITY > 2 ", /
FOR EACH MYJOB IN INBUFFER(MG1)
WITH PRIORITY(MYJOB) GT 2
FIND THE FIRST CASE
IF FOUND
  WRITE JOBNAME(MYJOB), PRIORITY(MYJOB) AS "JOB: ", T *, " has priority ", I 2,  " - REMOVE specific", /
  REMOVE MYJOB FROM INBUFFER(MG1)
  WRITE JOBNAME(MYJOB) AS " removed - you won't see this name again", /
ENDIF
WRITE N.INBUFFER(MG1) AS "INBUFFER set count is now = ", I 4, /
WHILE N.INBUFFER(MG1) NE 0
DO
  REMOVE FIRST MYJOB FROM INBUFFER(MG1)
  WRITE JOBNAME(MYJOB) AS "Removed JOB called ", T *, /
  WHILE F.ROUTING(MYJOB) NE 0
  DO
    REMOVE FIRST JOBSTEP FROM ROUTING(MYJOB)
    WRITE STEPNAME AS "Cleared step ", T *, /
    DESTROY JOBSTEP
  LOOP
  DESTROY JOB CALLED MYJOB
LOOP
WRITE AS "Testing PRINT THUS", /
PRINT 1 LINE THUS
INBUFFER IS EMPTY - THERE ARE NO JOBS WAITING
DISCONNECT SERVER NAMED SERVERNAME
CLOSE 6
END
