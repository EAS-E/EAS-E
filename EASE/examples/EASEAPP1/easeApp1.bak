<?xml version="1.0"?>
<EASE-Database ID="4000" genname="easeApp1">
<ENTITIES>
<entityType ID="1">
<entityTypeName>MACHINEGROUP</entityTypeName>
<attrDef embedded="Y">
<attrName>SETUPARR_PTR</attrName>
<attrTypeName>Reference</attrTypeName>
</attrDef>
<setOwnDef dbId="4000">INBUFFER</setOwnDef>
</entityType>
<entityType ID="2">
<entityTypeName>JOB</entityTypeName>
<attrDef>
<attrName>JOBNAME</attrName>
<attrTypeName>Text</attrTypeName>
</attrDef>
<attrDef embedded="Y">
<attrName>PRIORITY</attrName>
<attrTypeName>Integer</attrTypeName>
</attrDef>
<attrDef embedded="Y">
<attrName>VALUE</attrName>
<attrTypeName>Integer</attrTypeName>
</attrDef>
<setOwnDef dbId="4000">ROUTING</setOwnDef>
<setBelongDef dbId="0">INBUFFER</setBelongDef>
</entityType>
<entityType ID="3">
<entityTypeName>JOBSTEP</entityTypeName>
<attrDef>
<attrName>STEPNAME</attrName>
<attrTypeName>Text</attrTypeName>
</attrDef>
<setBelongDef dbId="4000">ROUTING</setBelongDef>
</entityType>
<entityType ID="4">
<entityTypeName>TASK</entityTypeName>
<attrDef>
<attrName>STEPNAME</attrName>
<attrTypeName>Text</attrTypeName>
</attrDef>
<attrDef>
<attrName>DURATION</attrName>
<attrTypeName>Integer</attrTypeName>
</attrDef>
<setBelongDef dbId="4000">ROUTING</setBelongDef>
</entityType>
<entityType ID="0" isProcedure="Y">
<entityTypeName>TESTENTRY</entityTypeName>
<Body><![CDATA[
ROUTINE TESTENTRY
DEFINE MG1 AS A MACHINEGROUP REFERENCE VARIABLE
DEFINE MYJOB AS A JOB REFERENCE VARIABLE
DEFINE I,J AS INTEGER VARIABLES
DEFINE NAME AS TEXT VARIABLE

LET MG1 = GETMACHINE.F(1)  '' function call

OPEN 6 FOR OUTPUT, FILENAME IS "jobs.txt"
USE 6 FOR OUTPUT
WRITE AS "Testing RANKED set filing by PRIORITY, then VALUE", /

OPEN 5 FOR INPUT, FILENAME IS "jobdata.txt"
USE 5 FOR INPUT
IF ROPENERR.V(UIB.R) EQ 0
  LET EOF.V = 1
ENDIF
WHILE EOF.V NE 2
DO
  READ NAME AS T *
  CALL MAKEJOB GIVEN NAME, 0, 0 YIELDING JOB
  READ PRIORITY..
  READ VALUE..
  WRITE PRIORITY(JOB), VALUE(JOB), JOBNAME(JOB) AS I 6, I 6, S 2, T *, /
  READ J
  FOR I = 1 TO J
  DO
    CREATE A JOBSTEP
    READ STEPNAME(JOBSTEP) '' AS T *
    FILE JOBSTEP FIRST IN ROUTING(JOB)
  LOOP
  FILE JOB IN INBUFFER(MG1)
  READ AS /
LOOP
CLOSE 5

WRITE AS "Listing RANKED set contents:", / 
WRITE AS "SEQ   PRI   VAL", /
LET I = 1
FOR EACH JOB IN INBUFFER(MG1)
 WHILE F.ROUTING(JOB) NE 0
DO
  CREATE A TASK
  LET DURATION(TASK) = I * 30
  FILE TASK LAST IN ROUTING(JOB)
  WRITE I, PRIORITY(JOB), VALUE(JOB), JOBNAME(JOB) AS I 3, I 6, I 6, S 2, T *, /
  LET I = I + 1
LOOP
WRITE N.INBUFFER(MG1) AS "TOTAL JOBS: ", I 3, /

WRITE AS "Testing FOR EACH in set ", /
FOR EACH MYJOB IN INBUFFER(MG1)
DO
  WRITE JOBNAME(MYJOB) AS "JOB: ", T *, B 20
  FOR EACH JOBSTEP IN ROUTING(MYJOB)
  DO
    WRITE STEPNAME(JOBSTEP) AS T *, S 2
  LOOP
  WRITE AS /
LOOP

WRITE AS "Testing cascaded set attribute refs: 1st & 2nd step names of 1st, then 1st of 2nd job", /

WRITE STEPNAME(F.ROUTING(F.INBUFFER(MG1))) AS T *, /
WRITE STEPNAME(S.ROUTING(F.ROUTING(F.INBUFFER(MG1)))) AS T *, /
WRITE STEPNAME(F.ROUTING(S.INBUFFER(F.INBUFFER(MG1)))) AS T *, /

WRITE AS "Testing FIND - look for PRIORITY > 2 ", /
FOR EACH MYJOB IN INBUFFER(MG1)
 WITH PRIORITY(MYJOB) GT 2
FIND THE FIRST CASE
IF FOUND
  WRITE JOBNAME(MYJOB), PRIORITY(MYJOB) AS "JOB: ", T *, " has priority ", I 2,  " - REMOVE specific", /
  REMOVE MYJOB FROM INBUFFER(MG1)
  WRITE JOBNAME(MYJOB) AS " removed - you won't see this name again", /
  IF S.INBUFFER(MYJOB) EQ 0
   WRITE AS "Testing for S.set - passed", /
  ENDIF
  DESTROY JOB CALLED MYJOB
ENDIF

WRITE N.INBUFFER(MG1) AS "INBUFFER set count is now = ", I 4, /
WHILE N.INBUFFER(MG1) NE 0
DO
  REMOVE FIRST MYJOB FROM INBUFFER(MG1)
  WRITE JOBNAME(MYJOB) AS "Removed JOB called ", T *, /
  WHILE F.ROUTING(MYJOB) NE 0
  DO
    IF F.ROUTING(MYJOB) IS A TASK
      WRITE DURATION(TASK) AS "Removing a TASK: duration ", I 4, /
      REMOVE FIRST TASK FROM ROUTING(MYJOB)
    ELSE
      REMOVE FIRST JOBSTEP FROM ROUTING(MYJOB)
      WRITE STEPNAME(JOBSTEP) AS "Cleared step ", T *, /
      DESTROY JOBSTEP
  ENDIF
  LOOP
  DESTROY JOB CALLED MYJOB
LOOP

WRITE AS "Testing PRINT THUS", /
PRINT 1 LINE THUS
INBUFFER IS EMPTY - THERE ARE NO JOBS WAITING

LET SETUPTIME(*) = SETUPARR_PTR(MG1)
WRITE SETUPTIME(1) AS /, "TIME = ", I 2, /
CLOSE 6
END
]]></Body>
</entityType>
<entityType ID="0" isProcedure="Y">
<entityTypeName>MAIN</entityTypeName>
<Body><![CDATA[
MAIN
DEFINE N AS AN INTEGER VARIABLE

CALL TESTENTRY   '' run the test

USE 1 FOR OUTPUT  '' no filename.. use console
WRITE AS "Testing console input/output: enter a (small) number", /
USE 2 FOR INPUT
READ N
WHILE N GT 0
DO
 WRITE N AS I 6, /
 LET N = N - 1
LOOP

WRITE AS "See the output file - jobs.txt - in the VSprojects/easeApp1/easeApp1 folder", /
END
]]></Body>
</entityType>
<entityType ID="0" isProcedure="Y">
<entityTypeName>GETMACHINE_F</entityTypeName>
<Body><![CDATA[
FUNCTION GETMACHINE.F GIVEN MACHTYPE RETURNING MACHINEGROUP REFERENCE
DEFINE MACHTYPE AS INTEGER VARIABLE

CREATE A MACHINEGROUP
RETURN WITH MACHINEGROUP
END
]]></Body>
</entityType>
<entityType ID="0" isProcedure="Y">
<entityTypeName>MAKEJOB</entityTypeName>
<Body><![CDATA[
ROUTINE MAKEJOB GIVEN NAME, IMPORTANCE AND PRICE YIELDING AJOB
DEFINE NAME AS A TEXT VARIABLE
DEFINE IMPORTANCE, PRICE AS INTEGER VARIABLES
DEFINE AJOB AS A JOB REFERENCE VARIABLE
CREATE A JOB CALLED AJOB
LET JOBNAME(AJOB) = NAME
LET PRIORITY(AJOB) = IMPORTANCE
LET VALUE(AJOB) = PRICE
RETURN
END
]]></Body>
</entityType>
</ENTITIES>
<SETS>
<setDef discipline="L">
<setName>ROUTING</setName>
</setDef>
<setDef discipline="R">
<setName>INBUFFER</setName>
<rankAttr>PRIORITY</rankAttr>
<rankAttr>VALUE</rankAttr>
</setDef>
</SETS>
<SYSTEM>
<entityType ID="0">
<entityTypeName>SYSTEM</entityTypeName>
<attrDef subscripts="1">
<attrName>JOBSHOP</attrName>
<attrTypeName>MACHINEGROUP</attrTypeName>
</attrDef>
<attrDef scripted="Y">
<attrName>MACHINEGROUP</attrName>
<attrTypeName>MACHINEGROUP</attrTypeName>
</attrDef>
<attrDef scripted="Y">
<attrName>JOB</attrName>
<attrTypeName>JOB</attrTypeName>
</attrDef>
<attrDef scripted="Y">
<attrName>JOBSTEP</attrName>
<attrTypeName>JOBSTEP</attrTypeName>
</attrDef>
<attrDef scripted="Y">
<attrName>TASK</attrName>
<attrTypeName>TASK</attrTypeName>
</attrDef>
</entityType>
</SYSTEM>
</EASE-Database>
